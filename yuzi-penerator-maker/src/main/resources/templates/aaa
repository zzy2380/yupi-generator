package com.yupi.cli.command;

import cn.hutool.core.bean.BeanUtil;
import com.yupi.generator.MainGenerator;
import com.yupi.model.DataModel;
import lombok.Data;
import picocli.CommandLine;
import picocli.CommandLine.Command;
import picocli.CommandLine.Option;

@Command(name = "generate", description = "生成代码", mixinStandardHelpOptions = true)
@Data
public class TestGroupCommand implements Runnable {

        @Option(names = {"-n", "--needGit"}, arity = "0..1", description = "是否生成.gitignore文件", interactive = true, echo = true)
        private boolean needGit = true;

        @Option(names = {"-l", "--loop"}, arity = "0..1", description = "是否生成循环", interactive = true, echo = true)
        private boolean loop = false;

        static DataModel.MainTemplate mainTemplate=new DataModel.MainTemplate();

    @Override
    public void run() {
        System.out.println(needGit);
        System.out.println(loop);
        System.out.println(mainTemplate);
        if(condition){
            System.out.println("输入核心模板配置");
            CommandLine commandLine=new CommandLine(MainTemplateCommand.class);
            commandLine.execute("--author","--outputText");
        }
        System.out.println(mainTemplate);
        //复制给DataModel
//        DataModel dataModel = new DataModel();
//        dataModel.mainTemplate=mainTemplate
//        BeanUtil.copyProperties(this, dataModel);
//        MainGenerator.doGenerate(dataModel);
    }

    @Command(name = "mainTemplate",description = "用于生成核心模板文件")
    @Data
    public static class MainTemplateCommand implements Runnable {
        /**
         * 作者注释
         */
        @Option(names = {"-a", "--author"}, arity = "0..1", description = "作者注释", interactive = true, echo = true)
        public String author = "yupi";
        /**
         * 输出信息
         */
        @Option(names = {"-o", "--outputText"}, arity = "0..1", description = "输出信息", interactive = true, echo = true)
        public String outputText = "sum = ";

        @Override
        public void run() {
            mainTemplate.author=author;
            mainTemplate.outputText=outputText;
        }
    }

    public static void main(String[] args) {
        CommandLine commandLine=new CommandLine(TestGroupCommand.class);
        args=new String[]{"-l","--needGit"};
        commandLine.execute(args);
    }
}

